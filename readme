author: Mehmet ASLAN
date: december 22, 2016

Serial Packet Library

description
	simple serial packet(sp) library that depends on byte communication.
        it is capable of encoding and decoding any data type.
	
how to use
1. packaging done using how variables represented in memory
        cd ./unit_testing/system_check
        make

        if program exits normally on both sides of communication,
        you are good to go
	
2. initialaze sp with sp_init func
        sp has internal fifo for receiving bytes.
        normally sp_init returns 0, otherwise fifo allocation unsuccessful.

3. how to send a packet
        write hardware dependent sp_tx_send function.
        see the example in ./unit_testing/encode
        encoding packet implicitly locks sp_tx_lock, unlock when done

4. how to receive a packet
        put received bytes into fifo rx with sp_frx_put
        put sp_decode func in your main loop, it works non-blocking
        when whole packet received sp_decode calls sp_handler
        do data type pointer casting, when you save variable unlock sp_rx_lock
        example ./unit_testing/decode

5. handling error
        when error occurs sp_error func called with error number

single packet
        <start(2)><content(n)><stop(2)>, (size)
content
        <var_size(1)><var[0]><var[1]> ... <var[var_size-1]><addr(2)><checksum(1)>
example 
        (var uint32 0x12345678) (addr 1)
        96 1 4 78 56 34 12 1 0 9 96 2


